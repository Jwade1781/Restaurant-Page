(()=>{"use strict";var n={751:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"* {};","",{version:3,sources:["webpack://./src/about.css"],names:[],mappings:"AAAA,GAAG,CAAA",sourcesContent:["* {};"],sourceRoot:""}]);const d=i},650:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"* {};","",{version:3,sources:["webpack://./src/contact.css"],names:[],mappings:"AAAA,GAAG,CAAA",sourcesContent:["* {};"],sourceRoot:""}]);const d=i},254:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"#headerContainer {\n    position: sticky;\n    top: 0%;\n    width: 100%;\n}\n\nnav {\n    padding-top: var(--paddingEx);\n    background-color: var(--bgColorOne);\n    text-align: center;\n    color: var(--fontColorLight);\n    box-shadow: var(--shadowCurveSm);\n}\n\nnav > h1 {\n    font-size: var(--fontLg);\n}\n\nnav > ul {\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n    list-style: none;\n}\n\nnav > ul > li {\n    margin-top: var(--paddingMed);\n    margin-bottom: var(--paddingMed);\n    font-size: var(--fontMed);\n    cursor:pointer;\n}\n\n.navSelected {\n    text-decoration: underline;\n}","",{version:3,sources:["webpack://./src/header.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,OAAO;IACP,WAAW;AACf;;AAEA;IACI,6BAA6B;IAC7B,mCAAmC;IACnC,kBAAkB;IAClB,4BAA4B;IAC5B,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;IAC7B,gCAAgC;IAChC,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:["#headerContainer {\n    position: sticky;\n    top: 0%;\n    width: 100%;\n}\n\nnav {\n    padding-top: var(--paddingEx);\n    background-color: var(--bgColorOne);\n    text-align: center;\n    color: var(--fontColorLight);\n    box-shadow: var(--shadowCurveSm);\n}\n\nnav > h1 {\n    font-size: var(--fontLg);\n}\n\nnav > ul {\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n    list-style: none;\n}\n\nnav > ul > li {\n    margin-top: var(--paddingMed);\n    margin-bottom: var(--paddingMed);\n    font-size: var(--fontMed);\n    cursor:pointer;\n}\n\n.navSelected {\n    text-decoration: underline;\n}"],sourceRoot:""}]);const d=i},301:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"\n#contentContainer > #homeContent {\n    background-color: var(--bgColorTwo);\n    border-radius: var(--curveSm);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    min-width: 50vw;\n}\n\n#contentContainer > #homeContent > div:first-child{\n    margin: var(--paddingLg) 0;\n    padding: var(--paddingLg);\n    display: flex;\n    flex-direction: column;\n    gap: var(--paddingSm);\n}\n\n#contentContainer > #homeContent > div:nth-child(2){\n    padding: var(--paddingMed);\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    width: 100%;\n    height: 100%;\n}\n\n.hours {\n    display: flex;\n    flex-direction: column;\n    margin: var(--paddingMed);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) h2 {\n    text-align: center;\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#contentContainer > #homeContent  > button {\n    border-radius:var(--curveSm);\n    padding: var(--paddingMed);\n    max-width: fit-content;\n    cursor: pointer;\n    align-self: center;\n    margin: var(--paddingLg) 0 var(--paddingMed) 0;\n}","",{version:3,sources:["webpack://./src/home.css"],names:[],mappings:";AACA;IACI,mCAAmC;IACnC,6BAA6B;IAC7B,4EAA4E;IAC5E,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;IAC5B,0BAA0B;IAC1B,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,8CAA8C;AAClD",sourcesContent:["\n#contentContainer > #homeContent {\n    background-color: var(--bgColorTwo);\n    border-radius: var(--curveSm);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    min-width: 50vw;\n}\n\n#contentContainer > #homeContent > div:first-child{\n    margin: var(--paddingLg) 0;\n    padding: var(--paddingLg);\n    display: flex;\n    flex-direction: column;\n    gap: var(--paddingSm);\n}\n\n#contentContainer > #homeContent > div:nth-child(2){\n    padding: var(--paddingMed);\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    width: 100%;\n    height: 100%;\n}\n\n.hours {\n    display: flex;\n    flex-direction: column;\n    margin: var(--paddingMed);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) h2 {\n    text-align: center;\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#contentContainer > #homeContent  > button {\n    border-radius:var(--curveSm);\n    padding: var(--paddingMed);\n    max-width: fit-content;\n    cursor: pointer;\n    align-self: center;\n    margin: var(--paddingLg) 0 var(--paddingMed) 0;\n}"],sourceRoot:""}]);const d=i},83:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"\n\n#menu {\n    background-color: #202020;\n    color: var(--fontColorLight);\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(400px, 1fr));\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: var(--paddingEx);\n    width: 100%;\n    height: 100%;\n    margin: 0 var(--paddingEx);\n    padding: var(--paddingLg);\n    box-shadow: var(--shadowCurveEx);\n    border: var(--borderSm) solid var(--bgColorAccent);\n}\n\n.foodCategory {\n    padding: var(--paddingLg);\n    border: var(--borderMed) solid var(--bgColorAccent);\n    border-radius: var(--curveSm);\n    max-height: min-content;\n}\n\n.foodCategory > h1 {\n    text-align: center;\n    border-bottom: var(--borderSm) solid var(--bgColorAccent);\n    margin-bottom: var(--paddingLg);\n}\n\n.foodCategory > div {\n    margin-bottom: var(--paddingLg);\n    width: 100%;\n}\n\n.foodNamePrice > .foodName, .foodNamePrice > .foodPrice {\n    margin-right: var(--paddingMed);\n    display: inline-flex;\n}\n\n.foodImage {\n    width: 100%;\n    height: auto;\n}\n\n.foodPrice {\n    font-style: italic;\n    text-align: center;\n}\n\ndetails {\n    cursor: pointer;\n}\n\ndetails > img {\n    margin: var(--paddingMed) 0px;\n}","",{version:3,sources:["webpack://./src/menu.css"],names:[],mappings:";;AAEA;IACI,yBAAyB;IACzB,4BAA4B;IAC5B,aAAa;IACb,yDAAyD;IACzD,2DAA2D;IAC3D,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,0BAA0B;IAC1B,yBAAyB;IACzB,gCAAgC;IAChC,kDAAkD;AACtD;;AAEA;IACI,yBAAyB;IACzB,mDAAmD;IACnD,6BAA6B;IAC7B,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,yDAAyD;IACzD,+BAA+B;AACnC;;AAEA;IACI,+BAA+B;IAC/B,WAAW;AACf;;AAEA;IACI,+BAA+B;IAC/B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC",sourcesContent:["\n\n#menu {\n    background-color: #202020;\n    color: var(--fontColorLight);\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(400px, 1fr));\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: var(--paddingEx);\n    width: 100%;\n    height: 100%;\n    margin: 0 var(--paddingEx);\n    padding: var(--paddingLg);\n    box-shadow: var(--shadowCurveEx);\n    border: var(--borderSm) solid var(--bgColorAccent);\n}\n\n.foodCategory {\n    padding: var(--paddingLg);\n    border: var(--borderMed) solid var(--bgColorAccent);\n    border-radius: var(--curveSm);\n    max-height: min-content;\n}\n\n.foodCategory > h1 {\n    text-align: center;\n    border-bottom: var(--borderSm) solid var(--bgColorAccent);\n    margin-bottom: var(--paddingLg);\n}\n\n.foodCategory > div {\n    margin-bottom: var(--paddingLg);\n    width: 100%;\n}\n\n.foodNamePrice > .foodName, .foodNamePrice > .foodPrice {\n    margin-right: var(--paddingMed);\n    display: inline-flex;\n}\n\n.foodImage {\n    width: 100%;\n    height: auto;\n}\n\n.foodPrice {\n    font-style: italic;\n    text-align: center;\n}\n\ndetails {\n    cursor: pointer;\n}\n\ndetails > img {\n    margin: var(--paddingMed) 0px;\n}"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],d=0;d<n.length;d++){var c=n[d],s=o.base?c[0]+o.base:c[0],A=a[s]||0,l="".concat(s," ").concat(A);a[s]=A+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:l,updater:g,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var d=t(a[i]);e[d].references--}for(var c=o(n,r),s=0;s<a.length;s++){var A=t(a[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),d=t(565),c=t.n(d),s=t(216),A=t.n(s),l=t(589),p=t.n(l),u=t(254),g={};g.styleTagTransform=p(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=A(),e()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;var m=t(301),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=A(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;const v=(()=>{const n=document.createElement("div");n.id="homeContent",n.append(f({foodStyle:{tag:"h1",description:"New York Style"},slogan:{tag:"h3",description:"Best Chinese Food Take Out in Central Florida!"},foodType:{tag:"h4",description:"Hunan - Szechuan - Mandarin Cuisine"},phone:{tag:"h5",description:"(352)-241-8081"}}));let e=document.createElement("div");return e.append(f({callToAction:{tag:"h2",description:"Come Visit Us!"},address:{tag:"address",description:"2430 US Highway 27 Suite 340, Clermont, FL 34714"},gmap:{id:"gmap",tag:"iframe",src:"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3510.224586491107!2d-81.6865363!3d28.382283899999997!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88dd7d2dc5b09bdf%3A0x2181c1c7720fd549!2s2430%20US-27%20%23340%2C%20Clermont%2C%20FL%2034714!5e0!3m2!1sen!2sus!4v1654229115747!5m2!1sen!2sus"}})),e.append(function(){let n=document.createElement("div"),e=f({LunchHours:{tag:"h2",description:"Lunch Hours"},MondayL:{tag:"time",description:"Mon: Closed"},TuesSatL:{tag:"time",description:"Tues-Sat: 11:00AM to 3:00PM"},SunL:{tag:"time",description:"Sun: 12:00PM to 3:00PM"}});return e.classList.add("hours"),e.id="lunchHours",n.append(e),e=f({DinnerHours:{tag:"h2",description:"Dinner Hours"},MondayD:{tag:"time",description:"Mon: Closed"},TuesSatD:{tag:"time",description:"Tues-Sat: 11:00AM to 9:00PM"},SunD:{tag:"time",description:"Sun: 12:00PM to 9:00PM"}}),e.classList.add("hours"),e.id="dinnerHours",n.append(e),n}()),n.append(e),n.append(function(){let n=document.createElement("button");return n.classList.add("hoverDarkBg"),n.textContent="Order Now",n}()),n})();function f(n){let e=document.createElement("div");for(const[t]of Object.entries(n)){let o=n[t],r=document.createElement(o.tag);void 0!==o.description&&(r.textContent=o.description),void 0!==o.src&&(r.src=o.src),void 0!==o.id&&(r.id=o.id),e.append(r)}return e}var h=t(83),B={};B.styleTagTransform=p(),B.setAttributes=c(),B.insert=i().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=A(),e()(h.Z,B),h.Z&&h.Z.locals&&h.Z.locals;var I=t(751),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=i().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=A(),e()(I.Z,b),I.Z&&I.Z.locals&&I.Z.locals;var x=t(650),y={};y.styleTagTransform=p(),y.setAttributes=c(),y.insert=i().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=A(),e()(x.Z,y),x.Z&&x.Z.locals&&x.Z.locals;const w=(()=>{const n=document.createElement("nav"),e=document.createElement("h1");e.textContent="Bamboo Garden";const t=document.createElement("ul"),o={Home:{classes:["navSelected","hoverBounce"],onclick:v},Menu:{classes:["hoverBounce"],onclick:void 0},About:{classes:["hoverBounce"],onclick:void 0},Contact:{classes:["hoverBounce"],onclick:void 0}},r=(n,e)=>{let t=document.createElement("li");t.textContent=n;for(const n of e.classes)t.classList.add(n);return t.addEventListener("click",(()=>{const n=document.querySelector("#contentContainer");for(document.querySelector(".navSelected").classList.remove("navSelected"),t.classList.add("navSelected");n.hasChildNodes();)n.removeChild(n.lastChild);n.append(e.onclick)})),t};for(const[n,e]of Object.entries(o))t.append(r(n,e));return n.append(e),n.append(t),n})();let E=1;document.addEventListener("readystatechange",(n=>{"complete"===n.target.readyState&&(document.querySelector("#headerContainer").append(w),setInterval((function(){"complete"===document.readyState&&(document.body.style.backgroundImage='url("assets/images/backgrounds/bg1.jpg")'),E=(E+1)%5+1}),2e3))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,