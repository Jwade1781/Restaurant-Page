(()=>{"use strict";var n={653:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),a=t(645),r=t.n(a)()(i());r.push([n.id,"* {};","",{version:3,sources:["webpack://./src/css/about.css"],names:[],mappings:"AAAA,GAAG,CAAA",sourcesContent:["* {};"],sourceRoot:""}]);const s=r},446:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),a=t(645),r=t.n(a)()(i());r.push([n.id,"* {};","",{version:3,sources:["webpack://./src/css/contact.css"],names:[],mappings:"AAAA,GAAG,CAAA",sourcesContent:["* {};"],sourceRoot:""}]);const s=r},850:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),a=t(645),r=t.n(a)()(i());r.push([n.id,"#headerContainer {\n    position: sticky;\n    top: 0%;\n    width: 100%;\n}\n\nnav {\n    padding-top: var(--paddingEx);\n    background-color: var(--bgColorOne);\n    text-align: center;\n    color: var(--fontColorLight);\n    box-shadow: var(--shadowCurveSm);\n}\n\nnav > h1 {\n    font-size: var(--fontLg);\n}\n\nnav > ul {\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n    list-style: none;\n}\n\nnav > ul > li {\n    margin-top: var(--paddingMed);\n    margin-bottom: var(--paddingMed);\n    font-size: var(--fontMed);\n    cursor:pointer;\n}\n\n.navSelected {\n    text-decoration: underline;\n}","",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,OAAO;IACP,WAAW;AACf;;AAEA;IACI,6BAA6B;IAC7B,mCAAmC;IACnC,kBAAkB;IAClB,4BAA4B;IAC5B,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;IAC7B,gCAAgC;IAChC,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:["#headerContainer {\n    position: sticky;\n    top: 0%;\n    width: 100%;\n}\n\nnav {\n    padding-top: var(--paddingEx);\n    background-color: var(--bgColorOne);\n    text-align: center;\n    color: var(--fontColorLight);\n    box-shadow: var(--shadowCurveSm);\n}\n\nnav > h1 {\n    font-size: var(--fontLg);\n}\n\nnav > ul {\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n    list-style: none;\n}\n\nnav > ul > li {\n    margin-top: var(--paddingMed);\n    margin-bottom: var(--paddingMed);\n    font-size: var(--fontMed);\n    cursor:pointer;\n}\n\n.navSelected {\n    text-decoration: underline;\n}"],sourceRoot:""}]);const s=r},434:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),a=t(645),r=t.n(a)()(i());r.push([n.id,"\n#contentContainer > #homeContent {\n    background-color: var(--bgColorTwo);\n    border-radius: var(--curveSm);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    min-width: 50vw;\n}\n\n#contentContainer > #homeContent > div:first-child{\n    margin: var(--paddingLg) 0;\n    padding: var(--paddingLg);\n    display: flex;\n    flex-direction: column;\n    gap: var(--paddingSm);\n}\n\n#contentContainer > #homeContent > div:nth-child(2){\n    padding: var(--paddingMed);\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    width: 100%;\n    height: 100%;\n}\n\n.hours {\n    display: flex;\n    flex-direction: column;\n    margin: var(--paddingMed);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) h2 {\n    text-align: center;\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#contentContainer > #homeContent  > button {\n    border-radius:var(--curveSm);\n    padding: var(--paddingMed);\n    max-width: fit-content;\n    cursor: pointer;\n    align-self: center;\n    margin: var(--paddingLg) 0 var(--paddingMed) 0;\n}","",{version:3,sources:["webpack://./src/css/home.css"],names:[],mappings:";AACA;IACI,mCAAmC;IACnC,6BAA6B;IAC7B,4EAA4E;IAC5E,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;IAC5B,0BAA0B;IAC1B,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,8CAA8C;AAClD",sourcesContent:["\n#contentContainer > #homeContent {\n    background-color: var(--bgColorTwo);\n    border-radius: var(--curveSm);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    min-width: 50vw;\n}\n\n#contentContainer > #homeContent > div:first-child{\n    margin: var(--paddingLg) 0;\n    padding: var(--paddingLg);\n    display: flex;\n    flex-direction: column;\n    gap: var(--paddingSm);\n}\n\n#contentContainer > #homeContent > div:nth-child(2){\n    padding: var(--paddingMed);\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    width: 100%;\n    height: 100%;\n}\n\n.hours {\n    display: flex;\n    flex-direction: column;\n    margin: var(--paddingMed);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) h2 {\n    text-align: center;\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#contentContainer > #homeContent  > button {\n    border-radius:var(--curveSm);\n    padding: var(--paddingMed);\n    max-width: fit-content;\n    cursor: pointer;\n    align-self: center;\n    margin: var(--paddingLg) 0 var(--paddingMed) 0;\n}"],sourceRoot:""}]);const s=r},113:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),a=t(645),r=t.n(a)()(i());r.push([n.id,"\n\n#menu {\n    background-color: var(--bgColorThree);\n    color: var(--fontColorLight);\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(400px, 1fr));\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: var(--paddingEx);\n    width: 100%;\n    height: 100%;\n    margin: 0 var(--paddingEx);\n    padding: var(--paddingLg);\n    box-shadow: var(--shadowCurveEx);\n    border: var(--borderSm) solid var(--bgColorAccent);\n}\n\n.foodCategory {\n    padding: var(--paddingLg);\n    border: var(--borderMed) solid var(--bgColorAccent);\n    border-radius: var(--curveSm);\n    max-height: min-content;\n}\n\n.foodCategory > h1 {\n    text-align: center;\n    border-bottom: var(--borderSm) solid var(--bgColorAccent);\n    margin-bottom: var(--paddingLg);\n}\n\n.foodCategory > div {\n    margin-bottom: var(--paddingLg);\n    width: 100%;\n}\n\n.foodNamePrice > .foodName, .foodNamePrice > .foodPrice {\n    margin-right: var(--paddingMed);\n    display: inline-flex;\n}\n\n.foodImage {\n    width: 100%;\n    height: auto;\n}\n\n.foodPrice {\n    font-style: italic;\n    text-align: center;\n}\n\ndetails {\n    cursor: pointer;\n}\n\ndetails > img {\n    margin: var(--paddingMed) 0px;\n}","",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:";;AAEA;IACI,qCAAqC;IACrC,4BAA4B;IAC5B,aAAa;IACb,yDAAyD;IACzD,2DAA2D;IAC3D,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,0BAA0B;IAC1B,yBAAyB;IACzB,gCAAgC;IAChC,kDAAkD;AACtD;;AAEA;IACI,yBAAyB;IACzB,mDAAmD;IACnD,6BAA6B;IAC7B,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,yDAAyD;IACzD,+BAA+B;AACnC;;AAEA;IACI,+BAA+B;IAC/B,WAAW;AACf;;AAEA;IACI,+BAA+B;IAC/B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC",sourcesContent:["\n\n#menu {\n    background-color: var(--bgColorThree);\n    color: var(--fontColorLight);\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(400px, 1fr));\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: var(--paddingEx);\n    width: 100%;\n    height: 100%;\n    margin: 0 var(--paddingEx);\n    padding: var(--paddingLg);\n    box-shadow: var(--shadowCurveEx);\n    border: var(--borderSm) solid var(--bgColorAccent);\n}\n\n.foodCategory {\n    padding: var(--paddingLg);\n    border: var(--borderMed) solid var(--bgColorAccent);\n    border-radius: var(--curveSm);\n    max-height: min-content;\n}\n\n.foodCategory > h1 {\n    text-align: center;\n    border-bottom: var(--borderSm) solid var(--bgColorAccent);\n    margin-bottom: var(--paddingLg);\n}\n\n.foodCategory > div {\n    margin-bottom: var(--paddingLg);\n    width: 100%;\n}\n\n.foodNamePrice > .foodName, .foodNamePrice > .foodPrice {\n    margin-right: var(--paddingMed);\n    display: inline-flex;\n}\n\n.foodImage {\n    width: 100%;\n    height: auto;\n}\n\n.foodPrice {\n    font-style: italic;\n    text-align: center;\n}\n\ndetails {\n    cursor: pointer;\n}\n\ndetails > img {\n    margin: var(--paddingMed) 0px;\n}"],sourceRoot:""}]);const s=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(r[d]=!0)}for(var c=0;c<n.length;c++){var u=[].concat(n[c]);o&&r[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(i," */"),r=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(r).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},r=[],s=0;s<n.length;s++){var d=n[s],c=o.base?d[0]+o.base:d[0],u=a[c]||0,l="".concat(c," ").concat(u);a[c]=u+1;var p=t(l),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var m=i(A,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}r.push(l)}return r}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=o(n=n||[],i=i||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var s=t(a[r]);e[s].references--}for(var d=o(n,i),c=0;c<a.length;c++){var u=t(a[c]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),i=t.n(o),a=t(569),r=t.n(a),s=t(565),d=t.n(s),c=t(216),u=t.n(c),l=t(589),p=t.n(l),A=t(850),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=r().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),e()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;var g=t(434),v={};v.styleTagTransform=p(),v.setAttributes=d(),v.insert=r().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=u(),e()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals;const C=(()=>{const n=document.createElement("div");n.id="homeContent",n.append(f({foodStyle:{tag:"h1",description:"New York Style"},slogan:{tag:"h3",description:"Best Chinese Food Take Out in Central Florida!"},foodType:{tag:"h4",description:"Hunan - Szechuan - Mandarin Cuisine"},phone:{tag:"h5",description:"(352)-241-8081"}}));let e=document.createElement("div");return e.append(f({callToAction:{tag:"h2",description:"Come Visit Us!"},address:{tag:"address",description:"2430 US Highway 27 Suite 340, Clermont, FL 34714"},gmap:{id:"gmap",tag:"iframe",src:"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3510.224586491107!2d-81.6865363!3d28.382283899999997!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88dd7d2dc5b09bdf%3A0x2181c1c7720fd549!2s2430%20US-27%20%23340%2C%20Clermont%2C%20FL%2034714!5e0!3m2!1sen!2sus!4v1654229115747!5m2!1sen!2sus"}})),e.append(function(){let n=document.createElement("div"),e=f({LunchHours:{tag:"h2",description:"Lunch Hours"},MondayL:{tag:"time",description:"Mon: Closed"},TuesSatL:{tag:"time",description:"Tues-Sat: 11:00AM to 3:00PM"},SunL:{tag:"time",description:"Sun: 12:00PM to 3:00PM"}});return e.classList.add("hours"),e.id="lunchHours",n.append(e),e=f({DinnerHours:{tag:"h2",description:"Dinner Hours"},MondayD:{tag:"time",description:"Mon: Closed"},TuesSatD:{tag:"time",description:"Tues-Sat: 11:00AM to 9:00PM"},SunD:{tag:"time",description:"Sun: 12:00PM to 9:00PM"}}),e.classList.add("hours"),e.id="dinnerHours",n.append(e),n}()),n.append(e),n.append(function(){let n=document.createElement("button");return n.classList.add("hoverDarkBg"),n.textContent="Order Now",n}()),n})();function f(n){let e=document.createElement("div");for(const[t]of Object.entries(n)){let o=n[t],i=document.createElement(o.tag);void 0!==o.description&&(i.textContent=o.description),void 0!==o.src&&(i.src=o.src),void 0!==o.id&&(i.id=o.id),e.append(i)}return e}var h=t(113),b={};b.styleTagTransform=p(),b.setAttributes=d(),b.insert=r().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=u(),e()(h.Z,b),h.Z&&h.Z.locals&&h.Z.locals;class B{constructor(n,e,t,o,i){return this.type=n,this.name=e,this.price=t,this.imgSrc=o,this.description=i,this.createFoodDom()}createFoodDom=()=>{let n=document.createElement("div");n.classList.add(this.type);let e=this.createFoodName(),t=this.createDetail();return n.append(e),n.append(t),n};createFoodName=()=>{const n={name:{tag:"h2",description:this.name,class:"foodName"},price:{tag:"h3",description:this.price,class:"foodPrice"}};let e=document.createElement("div");return e.classList.add("foodNamePrice"),this.createDomFromStructure(e,n),e};createDetail=()=>{const n={summary:{tag:"summary",description:"See More!"},img:{tag:"img",src:this.imgSrc,class:"foodImage"},foodDescription:{tag:"h5",description:this.description}};let e=document.createElement("details");return this.createDomFromStructure(e,n),e};createDomFromStructure=(n,e)=>{for(const[t]of Object.entries(e)){let o=e[t],i=document.createElement(o.tag);void 0!==o.description&&(i.textContent=o.description),void 0!==o.src&&(i.src=o.src),void 0!==o.id&&(i.id=o.id),void 0!==o.class&&i.classList.add(o.class),n.append(i)}}}const I=(()=>{let n=document.createElement("div");n.id="menu",n.append(x({type:"Appetizer",foods:[{Name:"Pork Egg Roll",Price:"$1.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Veg Egg Roll",Price:"$1.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Spring Roll",Price:"$1.35",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Fried Wonton",Price:"$5.25",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Krab Rangoon",Price:"$5.25",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"}]})),n.append(x({type:"Entree",foods:[{Name:"Pork Egg Roll",Price:"$1.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Veg Egg Roll",Price:"$1.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Spring Roll",Price:"$1.35",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Fried Wonton",Price:"$5.25",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Krab Rangoon",Price:"$5.25",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"}]})),document.querySelector("#contentContainer")&&document.getElementById("contentContainer").append(n)})();function x(n){let e=document.createElement("div");e.classList.add("foodCategory"),e.id=n.type+"s";for(const[t]of Object.entries(n.foods)){let o=new B(n.type,n.foods[t].Name,n.foods[t].Price,n.foods[t].imgSrc,n.foods[t].description);e.append(o)}return console.log(e),e}var y=t(653),S={};S.styleTagTransform=p(),S.setAttributes=d(),S.insert=r().bind(null,"head"),S.domAPI=i(),S.insertStyleElement=u(),e()(y.Z,S),y.Z&&y.Z.locals&&y.Z.locals;var E=t(446),L={};L.styleTagTransform=p(),L.setAttributes=d(),L.insert=r().bind(null,"head"),L.domAPI=i(),L.insertStyleElement=u(),e()(E.Z,L),E.Z&&E.Z.locals&&E.Z.locals;const w=(()=>{const n=document.createElement("nav"),e=document.createElement("h1");e.textContent="Bamboo Garden";const t=document.createElement("ul"),o={Home:{classes:["navSelected","hoverBounce"],onclick:C},Menu:{classes:["hoverBounce"],onclick:I},About:{classes:["hoverBounce"],onclick:void 0},Contact:{classes:["hoverBounce"],onclick:void 0}},i=(n,e)=>{let t=document.createElement("li");t.textContent=n;for(const n of e.classes)t.classList.add(n);return t.addEventListener("click",(()=>{const n=document.querySelector("#contentContainer");for(document.querySelector(".navSelected").classList.remove("navSelected"),t.classList.add("navSelected");n.hasChildNodes();)n.removeChild(n.lastChild);n.append(e.onclick)})),t};for(const[n,e]of Object.entries(o))t.append(i(n,e));return n.append(e),n.append(t),n})();let P=1;document.addEventListener("readystatechange",(n=>{"complete"===n.target.readyState&&(document.querySelector("#headerContainer").append(w),setInterval((function(){"complete"===document.readyState&&(document.body.style.backgroundImage='url("assets/images/backgrounds/bg1.jpg")'),P=(P+1)%5+1}),2e3))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,