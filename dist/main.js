(()=>{"use strict";var e={653:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,"* {};","",{version:3,sources:["webpack://./src/css/about.css"],names:[],mappings:"AAAA,GAAG,CAAA",sourcesContent:["* {};"],sourceRoot:""}]);const s=r},446:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,"* {};","",{version:3,sources:["webpack://./src/css/contact.css"],names:[],mappings:"AAAA,GAAG,CAAA",sourcesContent:["* {};"],sourceRoot:""}]);const s=r},850:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,"#headerContainer {\n    position: sticky;\n    top: 0%;\n    width: 100%;\n}\n\nnav {\n    padding-top: var(--paddingEx);\n    background-color: var(--bgColorOne);\n    text-align: center;\n    color: var(--fontColorLight);\n    box-shadow: var(--shadowCurveSm);\n}\n\nnav > h1 {\n    font-size: var(--fontLg);\n}\n\nnav > ul {\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n    list-style: none;\n}\n\nnav > ul > li {\n    margin-top: var(--paddingMed);\n    margin-bottom: var(--paddingMed);\n    font-size: var(--fontMed);\n    cursor:pointer;\n}\n\n.navSelected {\n    text-decoration: underline;\n}","",{version:3,sources:["webpack://./src/css/header.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,OAAO;IACP,WAAW;AACf;;AAEA;IACI,6BAA6B;IAC7B,mCAAmC;IACnC,kBAAkB;IAClB,4BAA4B;IAC5B,gCAAgC;AACpC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,6BAA6B;IAC7B,gCAAgC;IAChC,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:["#headerContainer {\n    position: sticky;\n    top: 0%;\n    width: 100%;\n}\n\nnav {\n    padding-top: var(--paddingEx);\n    background-color: var(--bgColorOne);\n    text-align: center;\n    color: var(--fontColorLight);\n    box-shadow: var(--shadowCurveSm);\n}\n\nnav > h1 {\n    font-size: var(--fontLg);\n}\n\nnav > ul {\n    justify-content: center;\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n    list-style: none;\n}\n\nnav > ul > li {\n    margin-top: var(--paddingMed);\n    margin-bottom: var(--paddingMed);\n    font-size: var(--fontMed);\n    cursor:pointer;\n}\n\n.navSelected {\n    text-decoration: underline;\n}"],sourceRoot:""}]);const s=r},434:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,"\n#contentContainer > #homeContent {\n    background-color: var(--bgColorTwo);\n    border-radius: var(--curveSm);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    min-width: 50vw;\n}\n\n#contentContainer > #homeContent > div:first-child{\n    margin: var(--paddingLg) 0;\n    padding: var(--paddingLg);\n    display: flex;\n    flex-direction: column;\n    gap: var(--paddingSm);\n}\n\n#contentContainer > #homeContent > div:nth-child(2){\n    padding: var(--paddingMed);\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    width: 100%;\n    height: 100%;\n}\n\n.hours {\n    display: flex;\n    flex-direction: column;\n    margin: var(--paddingMed);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) h2 {\n    text-align: center;\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#contentContainer > #homeContent  > button {\n    border-radius:var(--curveSm);\n    padding: var(--paddingMed);\n    max-width: fit-content;\n    cursor: pointer;\n    align-self: center;\n    margin: var(--paddingLg) 0 var(--paddingMed) 0;\n}","",{version:3,sources:["webpack://./src/css/home.css"],names:[],mappings:";AACA;IACI,mCAAmC;IACnC,6BAA6B;IAC7B,4EAA4E;IAC5E,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;IAC5B,0BAA0B;IAC1B,sBAAsB;IACtB,eAAe;IACf,kBAAkB;IAClB,8CAA8C;AAClD",sourcesContent:["\n#contentContainer > #homeContent {\n    background-color: var(--bgColorTwo);\n    border-radius: var(--curveSm);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    min-width: 50vw;\n}\n\n#contentContainer > #homeContent > div:first-child{\n    margin: var(--paddingLg) 0;\n    padding: var(--paddingLg);\n    display: flex;\n    flex-direction: column;\n    gap: var(--paddingSm);\n}\n\n#contentContainer > #homeContent > div:nth-child(2){\n    padding: var(--paddingMed);\n    display: flex;\n    flex-direction: row;\n    gap: var(--paddingLg);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * {\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n    width: 100%;\n    height: 100%;\n}\n\n.hours {\n    display: flex;\n    flex-direction: column;\n    margin: var(--paddingMed);\n}\n\n#contentContainer > #homeContent > div:nth-child(2) h2 {\n    text-align: center;\n}\n\n#contentContainer > #homeContent > div:nth-child(2) > * > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#contentContainer > #homeContent  > button {\n    border-radius:var(--curveSm);\n    padding: var(--paddingMed);\n    max-width: fit-content;\n    cursor: pointer;\n    align-self: center;\n    margin: var(--paddingLg) 0 var(--paddingMed) 0;\n}"],sourceRoot:""}]);const s=r},113:(e,n,t)=>{t.d(n,{Z:()=>s});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,"\n\n#menu {\n    background-color: var(--bgColorThree);\n    color: var(--fontColorLight);\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(400px, 1fr));\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: var(--paddingEx);\n    width: 100%;\n    height: 100%;\n    margin: 0 var(--paddingEx);\n    padding: var(--paddingLg);\n    box-shadow: var(--shadowCurveEx);\n    border: var(--borderSm) solid var(--bgColorAccent);\n}\n\n.foodCategory {\n    padding: var(--paddingLg);\n    border: var(--borderMed) solid var(--bgColorAccent);\n    border-radius: var(--curveSm);\n    max-height: min-content;\n}\n\n.foodCategory > h1 {\n    text-align: center;\n    border-bottom: var(--borderSm) solid var(--bgColorAccent);\n    margin-bottom: var(--paddingLg);\n}\n\n.foodCategory > div {\n    margin-bottom: var(--paddingLg);\n    width: 100%;\n}\n\n.foodNamePrice > .foodName, .foodNamePrice > .foodPrice {\n    margin-right: var(--paddingMed);\n    display: inline-flex;\n}\n\n.foodImage {\n    width: 100%;\n    height: auto;\n}\n\n.foodPrice {\n    font-style: italic;\n    text-align: center;\n}\n\ndetails {\n    cursor: pointer;\n}\n\ndetails > img {\n    margin: var(--paddingMed) 0px;\n}","",{version:3,sources:["webpack://./src/css/menu.css"],names:[],mappings:";;AAEA;IACI,qCAAqC;IACrC,4BAA4B;IAC5B,aAAa;IACb,yDAAyD;IACzD,2DAA2D;IAC3D,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,0BAA0B;IAC1B,yBAAyB;IACzB,gCAAgC;IAChC,kDAAkD;AACtD;;AAEA;IACI,yBAAyB;IACzB,mDAAmD;IACnD,6BAA6B;IAC7B,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,yDAAyD;IACzD,+BAA+B;AACnC;;AAEA;IACI,+BAA+B;IAC/B,WAAW;AACf;;AAEA;IACI,+BAA+B;IAC/B,oBAAoB;AACxB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,6BAA6B;AACjC",sourcesContent:["\n\n#menu {\n    background-color: var(--bgColorThree);\n    color: var(--fontColorLight);\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(400px, 1fr));\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n    gap: var(--paddingEx);\n    width: 100%;\n    height: 100%;\n    margin: 0 var(--paddingEx);\n    padding: var(--paddingLg);\n    box-shadow: var(--shadowCurveEx);\n    border: var(--borderSm) solid var(--bgColorAccent);\n}\n\n.foodCategory {\n    padding: var(--paddingLg);\n    border: var(--borderMed) solid var(--bgColorAccent);\n    border-radius: var(--curveSm);\n    max-height: min-content;\n}\n\n.foodCategory > h1 {\n    text-align: center;\n    border-bottom: var(--borderSm) solid var(--bgColorAccent);\n    margin-bottom: var(--paddingLg);\n}\n\n.foodCategory > div {\n    margin-bottom: var(--paddingLg);\n    width: 100%;\n}\n\n.foodNamePrice > .foodName, .foodNamePrice > .foodPrice {\n    margin-right: var(--paddingMed);\n    display: inline-flex;\n}\n\n.foodImage {\n    width: 100%;\n    height: auto;\n}\n\n.foodPrice {\n    font-style: italic;\n    text-align: center;\n}\n\ndetails {\n    cursor: pointer;\n}\n\ndetails > img {\n    margin: var(--paddingMed) 0px;\n}"],sourceRoot:""}]);const s=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",i=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),i&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),i&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,i,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(i)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(r[d]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);i&&r[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */"),r=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(r).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var a={},r=[],s=0;s<e.length;s++){var d=e[s],c=i.base?d[0]+i.base:d[0],u=a[c]||0,l="".concat(c," ").concat(u);a[c]=u+1;var p=t(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var A=o(m,i);i.byIndex=s,n.splice(s,0,{identifier:l,updater:A,references:1})}r.push(l)}return r}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=i(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var s=t(a[r]);n[s].references--}for(var d=i(e,o),c=0;c<a.length;c++){var u=t(a[c]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=d}}},569:e=>{var n={};e.exports=function(e,t){var i=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(i){var o=n[i];if(void 0!==o)return o.exports;var a=n[i]={id:i,exports:{}};return e[i](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),i=t(795),o=t.n(i),a=t(569),r=t.n(a),s=t(565),d=t.n(s),c=t(216),u=t.n(c),l=t(589),p=t.n(l),m=t(850),A={};A.styleTagTransform=p(),A.setAttributes=d(),A.insert=r().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=u(),n()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;var g=t(434),v={};v.styleTagTransform=p(),v.setAttributes=d(),v.insert=r().bind(null,"head"),v.domAPI=o(),v.insertStyleElement=u(),n()(g.Z,v),g.Z&&g.Z.locals&&g.Z.locals;const C=(()=>{const e=document.createElement("div");e.id="homeContent",e.append(f({foodStyle:{tag:"h1",description:"New York Style"},slogan:{tag:"h3",description:"Best Chinese Food Take Out in Central Florida!"},foodType:{tag:"h4",description:"Hunan - Szechuan - Mandarin Cuisine"},phone:{tag:"h5",description:"(352)-241-8081"}}));let n=document.createElement("div");return n.append(f({callToAction:{tag:"h2",description:"Come Visit Us!"},address:{tag:"address",description:"2430 US Highway 27 Suite 340, Clermont, FL 34714"},gmap:{id:"gmap",tag:"iframe",src:"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3510.224586491107!2d-81.6865363!3d28.382283899999997!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x88dd7d2dc5b09bdf%3A0x2181c1c7720fd549!2s2430%20US-27%20%23340%2C%20Clermont%2C%20FL%2034714!5e0!3m2!1sen!2sus!4v1654229115747!5m2!1sen!2sus"}})),n.append(function(){let e=document.createElement("div"),n=f({LunchHours:{tag:"h2",description:"Lunch Hours"},MondayL:{tag:"time",description:"Mon: Closed"},TuesSatL:{tag:"time",description:"Tues-Sat: 11:00AM to 3:00PM"},SunL:{tag:"time",description:"Sun: 12:00PM to 3:00PM"}});return n.classList.add("hours"),n.id="lunchHours",e.append(n),n=f({DinnerHours:{tag:"h2",description:"Dinner Hours"},MondayD:{tag:"time",description:"Mon: Closed"},TuesSatD:{tag:"time",description:"Tues-Sat: 11:00AM to 9:00PM"},SunD:{tag:"time",description:"Sun: 12:00PM to 9:00PM"}}),n.classList.add("hours"),n.id="dinnerHours",e.append(n),e}()),e.append(n),e.append(function(){let e=document.createElement("button");return e.classList.add("hoverDarkBg"),e.textContent="Order Now",e}()),e})();function f(e){let n=document.createElement("div");for(const[t]of Object.entries(e)){let i=e[t],o=document.createElement(i.tag);void 0!==i.description&&(o.textContent=i.description),void 0!==i.src&&(o.src=i.src),void 0!==i.id&&(o.id=i.id),n.append(o)}return n}var h=t(113),b={};b.styleTagTransform=p(),b.setAttributes=d(),b.insert=r().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=u(),n()(h.Z,b),h.Z&&h.Z.locals&&h.Z.locals;class B{constructor(e,n,t,i,o){return this.type=e,this.name=n,this.price=t,this.imgSrc=i,this.description=o,this.createFoodDom()}createFoodDom=()=>{let e=document.createElement("div");return e.classList.add(this.type),e.append(this.createFoodName()),e.append(this.createDetail()),e};createFoodName=()=>{const e={name:{tag:"h2",description:this.name,class:"foodName"},price:{tag:"h3",description:this.price,class:"foodPrice"}};let n=document.createElement("div");return n.classList.add("foodNamePrice"),this.createDomFromStructure(n,e),n};createDetail=()=>{const e={summary:{tag:"summary",description:"See More!"},img:{tag:"img",src:this.imgSrc,class:"foodImage"},foodDescription:{tag:"h5",description:this.description}};let n=document.createElement("details");return this.createDomFromStructure(n,e),n};createDomFromStructure=(e,n)=>{for(const[t]of Object.entries(n)){let i=n[t],o=document.createElement(i.tag);void 0!==i.description&&(o.textContent=i.description),void 0!==i.src&&(o.src=i.src),void 0!==i.id&&(o.id=i.id),void 0!==i.class&&o.classList.add(i.class),e.append(o)}}}const I=(()=>{console.log("Rendering Menu");let e=document.createElement("div");return e.id="menu",e.append(x({type:"Appetizer",foods:[{Name:"Pork Egg Roll",Price:"$1.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Veg Egg Roll",Price:"$1.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Spring Roll",Price:"$1.35",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Fried Wonton",Price:"$5.25",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Krab Rangoon",Price:"$5.25",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Steamed Dumplings",Price:"$7.45",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Fried Dumplings",Price:"$7.45",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"}]})),e.append(x({type:"Entree",foods:[{Name:"Chicken Lo Mein",Price:"$7.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Beef Lo Mein",Price:"$7.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Shrimp Lo Mein",Price:"$8.35",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Honey Chicken",Price:"$7.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Curry Chicken",Price:"$7.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Sweet & Sour Chicken",Price:"$7.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"},{Name:"Beef with Garlic Sauce",Price:"$7.75",imgSrc:"../dist/assets/images/bg1.jpg",description:"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus beatae voluptas unde doloribus inventore. Nulla minus dolorem necessitatibus fuga blanditiis accusantium aut nesciunt ratione tempore, unde adipisci repudiandae corrupti aspernatur?"}]})),e})();function x(e){let n=document.createElement("div");n.classList.add("foodCategory"),n.id=e.type+"s";let t=document.createElement("h1");t.textContent=e.type+"s",n.append(t);for(const[t]of Object.entries(e.foods))n.append(new B(e.type,e.foods[t].Name,e.foods[t].Price,e.foods[t].imgSrc,e.foods[t].description));return n}var y=t(653),S={};S.styleTagTransform=p(),S.setAttributes=d(),S.insert=r().bind(null,"head"),S.domAPI=o(),S.insertStyleElement=u(),n()(y.Z,S),y.Z&&y.Z.locals&&y.Z.locals;const L=void 0;var E=t(446),w={};w.styleTagTransform=p(),w.setAttributes=d(),w.insert=r().bind(null,"head"),w.domAPI=o(),w.insertStyleElement=u(),n()(E.Z,w),E.Z&&E.Z.locals&&E.Z.locals;const P=void 0,M=(()=>{const e=document.createElement("nav"),n=document.createElement("h1");n.textContent="Bamboo Garden";const t=document.createElement("ul"),i={Home:{classes:["navSelected","hoverBounce"],onclick:C},Menu:{classes:["hoverBounce"],onclick:I},About:{classes:["hoverBounce"],onclick:L},Contact:{classes:["hoverBounce"],onclick:P}},o=(e,n)=>{let t=document.createElement("li");t.textContent=e,t.id=`${e.toLowerCase()}Button`;for(const e of n.classes)t.classList.add(e);return t.addEventListener("click",(()=>{const e=document.querySelector("#contentContainer");for(document.querySelector(".navSelected").classList.remove("navSelected"),t.classList.add("navSelected");e.hasChildNodes();)e.removeChild(e.lastChild);e.append(n.onclick)})),t};for(const[e,n]of Object.entries(i))t.append(o(e,n));return e.append(n),e.append(t),e})();let N=1;(()=>{const e={debug:!0,pages:{currentDebug:"menu",home:C,menu:I,about:L,contact:P}};if(!0&&setInterval((function(){"complete"===document.readyState&&(document.body.style.backgroundImage='url("assets/images/backgrounds/bg1.jpg")'),N=(N+1)%5+1}),2e3),e.debug){let n=e.pages.currentDebug;e.pages[n]}})(),document.addEventListener("readystatechange",(e=>{"complete"===e.target.readyState&&(()=>{let e;e=C,document.querySelector("#headerContainer").append(M),document.querySelector("#contentContainer").append(e)})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,